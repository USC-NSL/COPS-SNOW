/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Cassandra internal/internode communication protocol
 *
 * NOTE: in order to maintain backwards compatibility you *must*
 *       only append new fields *and* they must have a default value.
 */
@namespace("org.apache.cassandra")

protocol InterNode {
    @aliases(["org.apache.cassandra.config.avro.IndexType"])
    @namespace("org.apache.cassandra.db.migration.avro")
    enum IndexType {
        KEYS,
        CUSTOM
    }

    @aliases(["org.apache.cassandra.config.avro.ColumnDef"])
    @namespace("org.apache.cassandra.db.migration.avro")
    record ColumnDef {
        bytes name;
        string validation_class;
        union { IndexType, null } index_type;
        union { string, null } index_name;
        union { null, map<string> } index_options = null;
    }

    @aliases(["org.apache.cassandra.config.avro.CfDef"])
    @namespace("org.apache.cassandra.db.migration.avro")
    record CfDef {
        string keyspace;
        string name;
        union { string, null } column_type;
        union { string, null } comparator_type;
        union { string, null } subcomparator_type;
        union { string, null } comment;
        union { double, null } read_repair_chance;
        boolean replicate_on_write = false;
        union { int, null } gc_grace_seconds;
        union { null, string } default_validation_class = null;
        union { null, string } key_validation_class = null;
        union { null, int } min_compaction_threshold = null;
        union { null, int } max_compaction_threshold = null;
        union { null, double} merge_shards_chance = null;
        union { int, null } id;
        union { array<ColumnDef>, null } column_metadata;
        union { null, bytes } key_alias = null;
        union { null, string } compaction_strategy = null;
        union { null, map<string> } compaction_strategy_options = null;
        union { null, map<string> } compression_options = null;
        union { null, double } bloom_filter_fp_chance = null;
        union { null, string } caching = null;
    }

    @aliases(["org.apache.cassandra.config.avro.KsDef"])
    @namespace("org.apache.cassandra.db.migration.avro")
    record KsDef {
        string name;
        string strategy_class;
        union{ map<string>, null } strategy_options;
        union{ int, null } replication_factor;
        array<CfDef> cf_defs;
        boolean durable_writes = true;
    }
    
    @namespace("org.apache.cassandra.utils.avro")
    fixed UUID(16);

    @namespace("org.apache.cassandra.db.migration.avro")
    record AddColumnFamily {
        CfDef cf;
    }

    @namespace("org.apache.cassandra.db.migration.avro")
    record AddKeyspace {
        KsDef ks;
    }

    @namespace("org.apache.cassandra.db.migration.avro")
    record DropColumnFamily {
        string ksname;
        string cfname;
    }

    @namespace("org.apache.cassandra.db.migration.avro")
    record DropKeyspace {
        string ksname;
    }

    @namespace("org.apache.cassandra.db.migration.avro")
    record UpdateKeyspace {
        KsDef oldKs;
        KsDef newKs;
    }
    
    @namespace("org.apache.cassandra.db.migration.avro")
    record UpdateColumnFamily {
        CfDef metadata;
    }

    @namespace("org.apache.cassandra.db.migration.avro")
    record Migration {
        org.apache.cassandra.utils.avro.UUID old_version;
        org.apache.cassandra.utils.avro.UUID new_version;
        bytes row_mutation;
        string classname;
        union { AddColumnFamily,DropColumnFamily,AddKeyspace,DropKeyspace,UpdateKeyspace,UpdateColumnFamily } migration;
    }
}
